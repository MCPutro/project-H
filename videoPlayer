/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package interfaces;


import java.awt.*;
import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import javax.media.*;
import javax.media.Player;
import javax.swing.*;


import java.io.IOException;
import java.nio.file.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import model.ambilGambar;

/**
 *
 * @author Mu'ti C Putro
 */

public class videoPlayer extends javax.swing.JFrame {

    Player thePlayer;
    ScrollPane sp;
    zoomGambar zp;
    ambilGambar shot;
    
    public videoPlayer() {
        
        setUndecorated(true);
        initComponents();
//        buatFolder();
//        copy();
    }

    
    public videoPlayer(URL alamat){
        setUndecorated(true);
        initComponents();
        
        MediaPlayer(alamat);
        
        buatFolder();
        zoomIn.setVisible(false);
        zoomOut.setVisible(false);
    }
    
    private void zoom(String url){
        zp = new zoomGambar(url);
        sp=new ScrollPane(ScrollPane.SCROLLBARS_AS_NEEDED);
        sp.setSize(1279,745);
        sp.setBackground(Color.BLUE);

        sp.add(zp);

        Adjustable vadjust = sp.getVAdjustable();
        Adjustable hadjust = sp.getHAdjustable();
        hadjust.setUnitIncrement(10);
        vadjust.setUnitIncrement(10);
        
    }
    
    private void buatFolder(){
        File data= new File("C:\\cctv\\"+getTanggalFolder()+"\\");
        data.mkdirs();
    }
    
    private String getTanggalFolder(){
        DateFormat namaFolder = new SimpleDateFormat("dd MMM yyyy");
        Date d = new Date();
        return namaFolder.format(d);
    }
    
//    void copy(){
//        try{
//            Path FROM = Paths.get("C:\\Setup.log");
//            Path TO = Paths.get("D:\\Setup.log");
//            //overwrite existing file, if exists
//            CopyOption[] options = new CopyOption[]{
//                StandardCopyOption.REPLACE_EXISTING,
//                StandardCopyOption.COPY_ATTRIBUTES
//            }; 
//            Files.copy(FROM, TO, options);}
//        catch(Throwable t){JOptionPane.showMessageDialog(null, t.getMessage());}
//    }
    
    
//    public void openPlayFile() {
//        URL theURL = null;
//        String mm=null;
//        JFileChooser fileChooser = new JFileChooser();
//        int result = fileChooser.showOpenDialog(null);
//        if (result == JFileChooser.APPROVE_OPTION) {
//            try{
//                theURL = fileChooser.getSelectedFile().toURL();
//                System.out.println(theURL.toString());
//                mm = theURL.toString();
//            }
//            catch ( MalformedURLException malformedURLException ){
//                System.err.println("Could not create URL for the file" + malformedURLException);
//            }
//        }
//        if (theURL != null){
////            MediaPlayer thePlayer = new MediaPlayer(theURL);
////            this.add(thePlayer);
////            this.setVisible(true);
//            MediaPlayer(theURL);
//            
////            vid.add(thePlayer);
//        }
//    }
    
    
    private void MediaPlayer(URL mediaURL) {
            setLayout( new BorderLayout() );
            try {
                //Create a player to play the media specified in the URL
//                Player 
                thePlayer = Manager.createRealizedPlayer(mediaURL);
                Component video = thePlayer.getVisualComponent(); //Add visual component
                Component controls = thePlayer.getControlPanelComponent(); //Add audio component
                
                controls.setSize(aaa.getWidth(), aaa.getHeight());
//                System.out.println(aaa.getWidth()+"w-h"+aaa.getHeight());
                
//                this.add(video, BorderLayout.CENTER);
//                this.add(controls, BorderLayout.SOUTH);
                vid.add(video);
                System.out.println("-_- h "+vid.getHeight()+"- w "+vid.getWidth());
                aaa.add(controls);
                
                thePlayer.start();
                
            }
//            catch (NoPlayerException noPlayerException){
//                System.err.println( "No media player found" + noPlayerException );
//            }
//            catch (CannotRealizeException cannotRealizeException){
//                System.err.println( "Could not realize media player" + cannotRealizeException);
//            }
//            catch (IOException iOException){
//                System.err.println( "Error reading from the source" +iOException);
//            }
            
            catch(IOException | NoPlayerException | CannotRealizeException t){}
        }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        background = new javax.swing.JPanel();
        vid = new javax.swing.JPanel();
        aaa = new javax.swing.JPanel();
        snapshoot = new javax.swing.JToggleButton();
        zoomIn = new javax.swing.JButton();
        zoomOut = new javax.swing.JButton();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        captur = new javax.swing.JMenuItem();
        ext = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1366, 768));
        setPreferredSize(new java.awt.Dimension(1366, 768));

        background.setBackground(new java.awt.Color(102, 102, 102));

        vid.setBackground(new java.awt.Color(51, 51, 255));
        vid.setMaximumSize(new java.awt.Dimension(1279, 26));
        vid.setMinimumSize(new java.awt.Dimension(1279, 26));

        aaa.setBackground(new java.awt.Color(0, 204, 0));

        javax.swing.GroupLayout aaaLayout = new javax.swing.GroupLayout(aaa);
        aaa.setLayout(aaaLayout);
        aaaLayout.setHorizontalGroup(
            aaaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1279, Short.MAX_VALUE)
        );
        aaaLayout.setVerticalGroup(
            aaaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 26, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout vidLayout = new javax.swing.GroupLayout(vid);
        vid.setLayout(vidLayout);
        vidLayout.setHorizontalGroup(
            vidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(aaa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        vidLayout.setVerticalGroup(
            vidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, vidLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(aaa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        snapshoot.setText("Prt Sc");
        snapshoot.setMargin(new java.awt.Insets(2, 0, 2, 0));
        snapshoot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                snapshootActionPerformed(evt);
            }
        });

        zoomIn.setText("+");
        zoomIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zoomInActionPerformed(evt);
            }
        });

        zoomOut.setText("-");
        zoomOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zoomOutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout backgroundLayout = new javax.swing.GroupLayout(background);
        background.setLayout(backgroundLayout);
        backgroundLayout.setHorizontalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundLayout.createSequentialGroup()
                .addComponent(vid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(snapshoot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(zoomIn, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                    .addComponent(zoomOut, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        backgroundLayout.setVerticalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(vid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(backgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(snapshoot, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(300, 300, 300)
                .addComponent(zoomIn)
                .addGap(18, 18, 18)
                .addComponent(zoomOut)
                .addContainerGap(329, Short.MAX_VALUE))
        );

        jMenuBar2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jMenu3.setText(" ");
        jMenu3.setMnemonic('F');

        captur.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_SPACE, 0));
        captur.setText("pause");
        captur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                capturActionPerformed(evt);
            }
        });
        jMenu3.add(captur);

        ext.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
        ext.setText("exit");
        ext.setMnemonic('x');
        ext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                extActionPerformed(evt);
            }
        });
        jMenu3.add(ext);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem1.setText("exit2");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem1);

        jMenuBar2.add(jMenu3);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void extActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_extActionPerformed
        thePlayer.stop();
        this.setVisible(false);
        
    }//GEN-LAST:event_extActionPerformed

    private void capturActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_capturActionPerformed
        try{
            System.out.println(thePlayer.toString());
            thePlayer.stop();
        }
        catch(Throwable d){}
    }//GEN-LAST:event_capturActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        thePlayer.stop();
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void snapshootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_snapshootActionPerformed
        try{ buatFolder();
            System.out.println(snapshoot.isSelected());

            if(snapshoot.isSelected()==true){
                thePlayer.stop();
                shot = new ambilGambar();
                zoom(shot.getUrl());
                vid.setVisible(false);
                
                background.add(sp);
                zoomIn.setVisible(true);
                zoomOut.setVisible(true);
            }
            else
            if(snapshoot.isSelected()==false){
                background.remove(sp);
                //                sp.setVisible(false);
                vid.setVisible(true);
                thePlayer.start();
                zoomIn.setVisible(false);
                zoomOut.setVisible(false);
            }

        }
        catch(Throwable t){JOptionPane.showMessageDialog(null, t.getMessage());}
    }//GEN-LAST:event_snapshootActionPerformed

    private void zoomInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zoomInActionPerformed
        try{
            zp.increaseSize();
        }
        catch(Throwable t){}
    }//GEN-LAST:event_zoomInActionPerformed

    private void zoomOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zoomOutActionPerformed
        try{
            zp.decreaseSize();
        }
        catch(Throwable t){}
    }//GEN-LAST:event_zoomOutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(videoPlayer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(videoPlayer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(videoPlayer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(videoPlayer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new videoPlayer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel aaa;
    private javax.swing.JPanel background;
    private javax.swing.JMenuItem captur;
    private javax.swing.JMenuItem ext;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JToggleButton snapshoot;
    private javax.swing.JPanel vid;
    private javax.swing.JButton zoomIn;
    private javax.swing.JButton zoomOut;
    // End of variables declaration//GEN-END:variables
}
