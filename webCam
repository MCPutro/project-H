/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package interfaces;

import JImage.JIResizeImage;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.nio.file.CopyOption;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.media.*;
import javax.media.control.FrameGrabbingControl;
import javax.media.util.BufferToImage;
import javax.media.format.VideoFormat;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import koneksi.konek;

public class webCam extends javax.swing.JFrame {

    Player player;
    BufferedImage cImage;
    String filename;
    
    ScrollPane sp;
    zoomGambar zp;
    
    konek data;
    URL pathh;
    
    int status;
    public webCam() {
       
        initComponents();
        
        data = new konek();
        data.connect();
        
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        java.awt.Dimension dialogSize = getSize();
        setLocation((screenSize.width-dialogSize.width)/2,(screenSize.height-dialogSize.height)/2);
        
        try {
            initCamera();
        } catch (IOException | NoPlayerException | CannotRealizeException ex) {
//            Logger.getLogger(SyarifWebcam.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        loadData();
        buatFolder();
        System.out.println(webCam.getSize()+"|"+webCam.getLocation().toString());
        
        status=bar.getValue();
//        copy();
    }
   
    
    private void zoom(String url){
        zp = new zoomGambar(url);
        sp=new ScrollPane(ScrollPane.SCROLLBARS_AS_NEEDED);
        sp.setSize(546,453);
        sp.setBackground(Color.BLUE);
        sp.setLocation(6, 6);
        sp.add(zp);

        Adjustable vadjust = sp.getVAdjustable();
        Adjustable hadjust = sp.getHAdjustable();
        hadjust.setUnitIncrement(10);
        vadjust.setUnitIncrement(10);
        
    }
   
    private void buatFolder(){
        File data= new File("C:\\cctv\\"+getTanggalFolder()+"\\");
        data.mkdirs();
    }
    
    
    public void getCapture(){
        FrameGrabbingControl fgc = (FrameGrabbingControl) player.getControl("javax.media.control.FrameGrabbingControl");
        Buffer buffer = fgc.grabFrame();
        BufferToImage bimage = new BufferToImage((VideoFormat) buffer.getFormat());
        Image image = bimage.createImage(buffer);
        JIResizeImage resize = new JIResizeImage();
        cImage = (BufferedImage) image;
        Image image2 = resize.rescale(cImage, 20);
//        this.setImageButton(hasil, image2);
        
    }
    
    
    private void initCamera() throws IOException, NoPlayerException, CannotRealizeException {
        MediaLocator mlocator = new MediaLocator("vfw:Microsoft WDM Image Capture (Win32):0");
        player = Manager.createRealizedPlayer(mlocator);
        this.webCam.add(player.getVisualComponent());
        player.start();
    }
    
    private void setImageButton(JToggleButton button, Image image) {
        button.setIcon(new ImageIcon(image));
    }
    
    private void getSave(){
//        FileDialog fd = new FileDialog(webCam.this, "Save File", FileDialog.SAVE);
//        fd.show();
//        if (fd.getFile() != null) {
//        filename = fd.getDirectory() + fd.getFile() + ".jpg";
//        filename = "C:\\haha\\woke\\"+getTanggal()+".jpg";
        filename = "C:\\cctv\\"+getTanggalFolder()+"\\"+ getTanggal() + ".jpg";
        System.out.println(filename);
        try {
            File buat = new File(filename);
            try {
                ImageIO.write(cImage, "jpg", buat);
            } 
            catch (Exception ex) {}
        } 
        catch (Exception e) {}
//    }
}
    
    public void getExit(){
        int confirm = JOptionPane.showConfirmDialog(this,"Are you sure will exit this application ?","Exit Application",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        if (confirm == JOptionPane.YES_OPTION){
            System.exit(0);
        } 
    }

    
    public void loadData(){
        try {
            hapusTabel();
            ResultSet rs = data.retrieveQuery("select * from list");
            DefaultTableModel model = (DefaultTableModel)tabelVideo.getModel();
            int i=0;
            while (rs.next()){
                model.addRow(new Object[]{ false,"","","",""} );
                
                tabelVideo.setValueAt(rs.getRow(), i, 1);
                tabelVideo.setValueAt(rs.getString("tanggal"), i, 2);
                tabelVideo.setValueAt(rs.getString("kelas"), i, 3);
                tabelVideo.setValueAt(rs.getURL("url"), i, 4);
                ++i;
            }
            rs.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }
    
    public void hapusTabel(){
        try{
            int i=tabelVideo.getRowCount();
            DefaultTableModel model = (DefaultTableModel)tabelVideo.getModel();
            for(int a=0;a<i;a++){
                model.removeRow(0);
            }
        }
        catch(Throwable t){JOptionPane.showMessageDialog(null, t.getMessage());}
    }
    
    
    private String getTanggal() {  
        DateFormat dateFormat = new SimpleDateFormat("ddMMMyyyy HH-mm");  
        Date date = new Date();  
        return dateFormat.format(date);  
    }
    
    private String getTanggalFolder(){
        DateFormat namaFolder = new SimpleDateFormat("dd MMM yyyy");
        Date d = new Date();
        return namaFolder.format(d);
    }
    
    //copy file
    private void copy(String a){
        try{
            Path FROM = Paths.get(a);
            String s= "C:\\cctv\\"+getTanggalFolder()+"\\video "+getTanggal()+".avi";
            
//            Path TO = Paths.get("E:\\S.log");
            Path TO = Paths.get(s);
            
            //overwrite existing file, if exists
            CopyOption[] options = new CopyOption[]{
                StandardCopyOption.REPLACE_EXISTING,
                StandardCopyOption.COPY_ATTRIBUTES
            }; 
            Files.copy(FROM, TO, options);}
        catch(Throwable t){JOptionPane.showMessageDialog(null, t.getMessage());}
    }
    
    public void openVideo(){
        URL theURL = null,f=null;
        JFileChooser fileChooser = new JFileChooser();
        int result = fileChooser.showOpenDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            try{
                theURL = fileChooser.getSelectedFile().toURL();
                String a = fileChooser.getSelectedFile().toString();
                copy(a);
                String haha = "file:/C:/cctv/"+getTanggalFolder()+"/video "+getTanggal()+".avi";
                System.out.println("berhasil copy "+haha);
//                String insert = "insert into list values ('"+getTanggal()+"','"+kelas.getSelectedItem()+"','"+theURL+"');";
                String insert = "insert into list values ('"+getTanggal()+"','"+kelas.getSelectedItem()+"','"+haha+"');";
//                System.out.println(insert);
                data.doQuery(insert);
            }
            catch ( MalformedURLException malformedURLException ){
                System.err.println("Could not create URL for the file" + malformedURLException);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        panelKamera = new javax.swing.JPanel();
        webCam = new javax.swing.JToggleButton();
        kelas = new javax.swing.JComboBox();
        panelZoom = new javax.swing.JPanel();
        bar = new javax.swing.JSlider();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        tombolZoom = new javax.swing.JToggleButton();
        ambilImage = new javax.swing.JToggleButton();
        jPanel2 = new javax.swing.JPanel();
        playVideo = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelVideo = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        tambahVideo = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(862, 539));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        webCam.setText("jToggleButton1");

        kelas.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        kelas.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "A101", "A102", "A103", "A104", "A105", " ", " " }));

        panelZoom.setBackground(new java.awt.Color(255, 250, 250));
        panelZoom.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panelZoom.setVisible(false);

        bar.setMaximum(30);
        bar.setOrientation(javax.swing.JSlider.VERTICAL);
        bar.setValue(0);
        bar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                barMouseDragged(evt);
            }
        });

        jButton3.setText("+");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("-");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelZoomLayout = new javax.swing.GroupLayout(panelZoom);
        panelZoom.setLayout(panelZoomLayout);
        panelZoomLayout.setHorizontalGroup(
            panelZoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelZoomLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bar, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelZoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelZoomLayout.setVerticalGroup(
            panelZoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelZoomLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelZoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelZoomLayout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4))
                    .addComponent(bar, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        tombolZoom.setText("zoom");
        tombolZoom.setVisible(false);
        tombolZoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolZoomActionPerformed(evt);
            }
        });

        ambilImage.setText("AMBIL GAMBAR");
        ambilImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ambilImageActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelKameraLayout = new javax.swing.GroupLayout(panelKamera);
        panelKamera.setLayout(panelKameraLayout);
        panelKameraLayout.setHorizontalGroup(
            panelKameraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelKameraLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(webCam, javax.swing.GroupLayout.PREFERRED_SIZE, 546, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(panelKameraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(kelas, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelZoom, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tombolZoom, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ambilImage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE))
                .addGap(43, 43, 43))
        );
        panelKameraLayout.setVerticalGroup(
            panelKameraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelKameraLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelKameraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelKameraLayout.createSequentialGroup()
                        .addComponent(kelas, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 176, Short.MAX_VALUE)
                        .addComponent(panelZoom, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tombolZoom)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ambilImage, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(webCam, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Kamera", panelKamera);

        playVideo.setText("PLAY");
        playVideo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playVideoActionPerformed(evt);
            }
        });

        jButton2.setText("DELETE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("video"));

        tabelVideo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "no", "Tanggal", "Kelas", "URL"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelVideo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelVideoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelVideo);
        if (tabelVideo.getColumnModel().getColumnCount() > 0) {
            tabelVideo.getColumnModel().getColumn(0).setMinWidth(30);
            tabelVideo.getColumnModel().getColumn(0).setMaxWidth(30);
            tabelVideo.getColumnModel().getColumn(1).setMinWidth(30);
            tabelVideo.getColumnModel().getColumn(1).setMaxWidth(30);
            tabelVideo.getColumnModel().getColumn(2).setMinWidth(150);
            tabelVideo.getColumnModel().getColumn(2).setMaxWidth(150);
            tabelVideo.getColumnModel().getColumn(3).setMinWidth(150);
            tabelVideo.getColumnModel().getColumn(3).setMaxWidth(150);
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 773, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(663, Short.MAX_VALUE)
                .addComponent(playVideo)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(18, 18, 18))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(playVideo)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tabel video", jPanel2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        jMenu1.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/save.png"))); // NOI18N
        jMenuItem1.setText("simpan");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/exit.png"))); // NOI18N
        jMenuItem2.setText("exit");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Video");

        tambahVideo.setText("tambah video");
        tambahVideo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahVideoActionPerformed(evt);
            }
        });
        jMenu2.add(tambahVideo);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("about");
        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        getExit();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void tambahVideoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahVideoActionPerformed
        try{
            openVideo();
            loadData();
        }
        catch(Throwable t){JOptionPane.showMessageDialog(null, t.getMessage());}
    }//GEN-LAST:event_tambahVideoActionPerformed

    private void tabelVideoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelVideoMouseClicked
        try{
            
            pathh = (URL) tabelVideo.getValueAt(tabelVideo.getSelectedRow(), 4);
            System.out.println(pathh);
            
            
        }
        catch(Throwable t){JOptionPane.showMessageDialog(null, t.getMessage());}
    }//GEN-LAST:event_tabelVideoMouseClicked

    private void playVideoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playVideoActionPerformed
        try{
            new videoPlayer(pathh).setVisible(true);
        }
        catch(Throwable a){JOptionPane.showMessageDialog(null, a.getMessage());}
    }//GEN-LAST:event_playVideoActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try{
            int temp = 0;
            int jumlahYgDiPilih=0;
            int p = tabelVideo.getRowCount();
            
            for(int e=0;e<p;e++){
                if(tabelVideo.getValueAt(e, 0).equals(true)){
                    jumlahYgDiPilih++;
                    temp = e;
                    System.out.println(temp);
                    System.out.println(tabelVideo.getValueAt(temp, 2).toString());
                    String hapus = "delete from list where tanggal = '"+tabelVideo.getValueAt(temp, 2).toString()+"';";
//                    System.out.println(hapus);
                    data.doQuery(hapus);
                    loadData();
                }
            }
        }
        catch(Throwable f){}
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        zp.increaseSize();
        bar.setValue(bar.getValue()+1);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        zp.decreaseSize();
        bar.setValue(bar.getValue()-1);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void barMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_barMouseDragged
        try{
            
            System.out.println("masuk status : "+status);
            if(bar.getValue()>status){
                zp.increaseSize();
                status = bar.getValue();
            }
            else
            if(bar.getValue()<status){
                zp.decreaseSize();
                status = bar.getValue();
            }    
        }
        catch(Throwable t){}
    }//GEN-LAST:event_barMouseDragged

    private void tombolZoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombolZoomActionPerformed
        try{
            if(tombolZoom.isSelected() == true){
                panelZoom.setVisible(true);
            }
            else
            if(tombolZoom.isSelected() == false){
                panelZoom.setVisible(false);
            }
        }
        catch(Throwable t){}
    }//GEN-LAST:event_tombolZoomActionPerformed

    private void ambilImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ambilImageActionPerformed
        try{buatFolder();
            if(ambilImage.isSelected() == true){
                getCapture();
                getSave();
                webCam.setVisible(false);
                zoom(filename);
                panelKamera.add(sp);

                tombolZoom.setVisible(true);
            }
            else
            if(ambilImage.isSelected() == false){
                panelKamera.remove(sp);
                webCam.setVisible(true);
                panelZoom.setVisible(false);
                tombolZoom.setSelected(false);
                tombolZoom.setVisible(false);
            }
        }
        catch(Throwable t){}
    }//GEN-LAST:event_ambilImageActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(webCam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(webCam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(webCam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(webCam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new webCam().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton ambilImage;
    private javax.swing.JSlider bar;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JComboBox kelas;
    private javax.swing.JPanel panelKamera;
    private javax.swing.JPanel panelZoom;
    private javax.swing.JButton playVideo;
    private javax.swing.JTable tabelVideo;
    private javax.swing.JMenuItem tambahVideo;
    private javax.swing.JToggleButton tombolZoom;
    private javax.swing.JToggleButton webCam;
    // End of variables declaration//GEN-END:variables
}
